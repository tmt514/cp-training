"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5321],{4163:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=s(5893),i=s(1151);const a={sidebar_position:2,title:"Combinatorial Objects",exercises:["leetcode-permutations","leetcode-permutations2","leetcode-n-queens","kattis-holeynqueensbatman"]},r="frontMatter.title",l={id:"week2/combinatorial-objects",title:"Combinatorial Objects",description:"We can use recursion to generate a certain type of combinatorial objects, such as subsets, combinations, and permutations.",source:"@site/docs/week2/01-combinatorial-objects.mdx",sourceDirName:"week2",slug:"/week2/combinatorial-objects",permalink:"/cp-training/docs/week2/combinatorial-objects",draft:!1,unlisted:!1,editUrl:"https://github.com/tmt514/cp-training/tree/main/docs/week2/01-combinatorial-objects.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Combinatorial Objects",exercises:["leetcode-permutations","leetcode-permutations2","leetcode-n-queens","kattis-holeynqueensbatman"]},sidebar:"tutorialSidebar",previous:{title:"Basic Recursion",permalink:"/cp-training/docs/week2/basic-recursion"},next:{title:"Extra Challenge",permalink:"/cp-training/docs/week2/extra-challenge"}},o={},c=[{value:"Subsets",id:"subsets",level:2},{value:"Algorithm Design Questions",id:"algorithm-design-questions",level:3},{value:"Combinations",id:"combinations",level:2},{value:"Algorithm Design Questions",id:"algorithm-design-questions-1",level:3},{value:"Permutations",id:"permutations",level:2},{value:"Algorithm Design Questions",id:"algorithm-design-questions-2",level:3},{value:"Exercises",id:"exercises",level:2},{value:"Diversion: Without Recursion",id:"diversion-without-recursion",level:3}];function d(e){const n={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{DisplayProgress:s,LocalButton:r,TabItem:l,Tabs:o}=n;return s||m("DisplayProgress",!0),r||m("LocalButton",!0),l||m("TabItem",!0),o||m("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s,{names:a.exercises}),"\n",(0,t.jsx)(n.h1,{id:"frontmattertitle",children:a.title}),"\n",(0,t.jsxs)(n.p,{children:["We can use recursion to generate a certain type of combinatorial objects, such as ",(0,t.jsx)(n.strong,{children:"subsets"}),", ",(0,t.jsx)(n.strong,{children:"combinations"}),", and ",(0,t.jsx)(n.strong,{children:"permutations"}),".\nThey serve one very important problem solving skill \u2014 enumeration."]}),"\n",(0,t.jsx)(n.p,{children:"When designing a recursive function, one key concept is to realize the meaning of the depth of recursion.\nThe following question can be used to check this:"}),"\n",(0,t.jsx)(n.admonition,{title:"Sanity Check",type:"note",children:(0,t.jsxs)(n.p,{children:["In recursion depth-",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"d"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"d"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"d"})]})})]}),", do you focus on the ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"d"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"d"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"d"})]})})]}),"-th item from the input or the ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"d"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"d"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"d"})]})})]}),"-th item you've selected?"]})}),"\n",(0,t.jsx)(n.h2,{id:"subsets",children:"Subsets"}),"\n",(0,t.jsxs)(n.p,{children:["The simplest idea for enumerate subsets is to focus on each item ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"d"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"d"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"d"})]})})]}),": choose it or not?"]}),"\n",(0,t.jsxs)(o,{groupId:"programming-language",children:[(0,t.jsxs)(l,{value:"java",label:"Java",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"import java.util.LinkedList;\n\npublic class printsubsets {\n\n  public void printAllSubsets(int n, int d, LinkedList<Integer> currentSubset) {\n    if (d > n) {\n      System.out.println(currentSubset);\n      return;\n    }\n    currentSubset.add(d);\n    printAllSubsets(n, d + 1, currentSubset);\n    currentSubset.removeLast();\n    printAllSubsets(n, d + 1, currentSubset);\n  }\n\n  public static void main(String[] args) {\n    printsubsets solver = new printsubsets();\n    solver.printAllSubsets(5, 1, new LinkedList<Integer>());\n  }\n}\n"})}),(0,t.jsx)(n.h3,{id:"algorithm-design-questions",children:"Algorithm Design Questions"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Can you reduce the number of parameters for ",(0,t.jsx)(n.code,{children:"printSubsets()"})," function?"]}),"\n",(0,t.jsxs)(n.li,{children:["What happens if we change ",(0,t.jsx)(n.code,{children:"currentSubset.removeLast();"})," to ",(0,t.jsx)(n.code,{children:"currentSubset.remove(d);"})," on line 12?"]}),"\n"]})]}),(0,t.jsx)(l,{value:"py",label:"Python"})]}),"\n",(0,t.jsx)(n.h2,{id:"combinations",children:"Combinations"}),"\n",(0,t.jsxs)(n.p,{children:["If we decide at ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"d"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"d"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"d"})]})})]}),"-th depth which element is chosen as the ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsx)(n.mrow,{children:(0,t.jsx)(n.mi,{children:"d"})}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"d"})]})})}),(0,t.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"d"})]})})]}),"-th element, then we are able to list all combinations of a given set."]}),"\n",(0,t.jsxs)(o,{groupId:"programming-language",children:[(0,t.jsxs)(l,{value:"java",label:"Java",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"import java.util.LinkedList;\n\npublic class printcombinations {\n\n  public void printAllCombinations(int n, int k, int d, int now, LinkedList<Integer> current) {\n    if (d > k) {\n      System.out.println(current);\n      return;\n    }\n    while (now <= n) {\n      current.add(now);\n      printAllCombinations(n, k, d + 1, now + 1, current);\n      current.removeLast();\n      now++;\n    }\n  }\n  public static void main(String[] args) {\n    printcombinations solver = new printcombinations();\n    solver.printAllCombinations(5, 3, 1, 1, new LinkedList<Integer>());\n  }\n}\n"})}),(0,t.jsx)(n.h3,{id:"algorithm-design-questions-1",children:"Algorithm Design Questions"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Why do we need the parameter ",(0,t.jsx)(n.code,{children:"now"}),"?"]}),"\n",(0,t.jsxs)(n.li,{children:["Can you reduce the number of parameters for ",(0,t.jsx)(n.code,{children:"printSubsets()"})," function?"]}),"\n",(0,t.jsx)(n.li,{children:"Can you modify the above implementation such that it prints out all subsets instead?"}),"\n"]})]}),(0,t.jsx)(l,{value:"py",label:"Python"})]}),"\n",(0,t.jsx)(n.h2,{id:"permutations",children:"Permutations"}),"\n",(0,t.jsxs)(n.p,{children:["Permutations are very similar to combinations, except that ",(0,t.jsxs)(n.span,{className:"katex",children:[(0,t.jsx)(n.span,{className:"katex-mathml",children:(0,t.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(n.semantics,{children:[(0,t.jsxs)(n.mrow,{children:[(0,t.jsx)(n.mi,{children:"k"}),(0,t.jsx)(n.mo,{children:"="}),(0,t.jsx)(n.mi,{children:"n"})]}),(0,t.jsx)(n.annotation,{encoding:"application/x-tex",children:"k=n"})]})})}),(0,t.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(n.span,{className:"mrel",children:"="}),(0,t.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(n.span,{className:"base",children:[(0,t.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(n.span,{className:"mord mathnormal",children:"n"})]})]})]})," and we don't need the extra ",(0,t.jsx)(n.code,{children:"now"})," parameter.\nHowever, we need to pay extra attention that the same element must not appear twice."]}),"\n",(0,t.jsxs)(o,{groupId:"programming-language",children:[(0,t.jsxs)(l,{value:"java",label:"Java",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:"import java.util.HashSet;\nimport java.util.LinkedList;\n\npublic class printpermutations {\n  \n  public void printAllPermutations(int n, int d, HashSet<Integer> used, LinkedList<Integer> current) {\n    if (d > n) {\n      System.out.println(current);\n      return;\n    }\n    for (int i = 1; i <= n; i++) {\n      if (!used.contains(i)) {\n        used.add(i);\n        current.add(i);\n        printAllPermutations(n, d + 1, used, current);\n        current.removeLast();\n        used.remove(i);\n      }\n    }\n  }\n  public static void main(String[] args) {\n    printpermutations solver = new printpermutations();\n    solver.printAllPermutations(4, 1, new HashSet<Integer>(), new LinkedList<Integer>());\n  }\n}\n"})}),(0,t.jsx)(n.h3,{id:"algorithm-design-questions-2",children:"Algorithm Design Questions"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Why do we need the parameter ",(0,t.jsx)(n.code,{children:"used"}),"?"]}),"\n",(0,t.jsxs)(n.li,{children:["In a deeper depth of recursion, the program actually waste lots of time testing ",(0,t.jsx)(n.code,{children:"used.contains(i)"})," without any progress.\nIs it possible to speed up?"]}),"\n"]})]}),(0,t.jsx)(l,{value:"py",label:"Python"})]}),"\n",(0,t.jsx)(n.h2,{id:"exercises",children:"Exercises"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:"Problem"}),(0,t.jsx)(n.th,{children:"Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(r,{name:"leetcode-permutations"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/permutations/description/",children:"Leetcode 46. Permutations"})}),(0,t.jsx)(n.td,{children:"List permutations."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(r,{name:"leetcode-permutations2"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/permutations-ii/description/",children:"Leetcode 47. Permutations II"})}),(0,t.jsx)(n.td,{children:"List permutations with duplicates."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(r,{name:"leetcode-n-queens"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/n-queens/description/",children:"N Queens"})}),(0,t.jsx)(n.td,{children:"Find all N-Queen solutions."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(r,{name:"kattis-holeynqueensbatman"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://open.kattis.com/problems/holeynqueensbatman",children:"Holey N-Queens (Batman)"})}),(0,t.jsx)(n.td,{children:"Count number of holey n-queen solutions."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"diversion-without-recursion",children:"Diversion: Without Recursion"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Can you design algorithms that generates subsets, combinations, and permutations without recursion?"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function m(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>r});var t=s(7294);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);