"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[851],{9179:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=n(5893),s=n(1151);const r={sidebar_position:1,title:"Basic Recursion"},o="frontMatter.title",a={id:"week2/basic-recursion",title:"Basic Recursion",description:"What is recursion? Essentially, recursion occurs when you write a function that calls itself, usually with a different set of parameters, within the function. Recursion has two key features:",source:"@site/docs/week2/00-basic-recursion.mdx",sourceDirName:"week2",slug:"/week2/basic-recursion",permalink:"/cp-training/docs/week2/basic-recursion",draft:!1,unlisted:!1,editUrl:"https://github.com/tmt514/cp-training/tree/main/docs/week2/00-basic-recursion.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Basic Recursion"},sidebar:"tutorialSidebar",previous:{title:"Week 2 - Recursion",permalink:"/cp-training/docs/category/week-2---recursion"},next:{title:"Combinatorial Objects",permalink:"/cp-training/docs/week2/combinatorial-objects"}},c={},l=[];function u(e){const t={em:"em",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"frontmattertitle",children:r.title}),"\n",(0,i.jsx)(t.p,{children:"What is recursion? Essentially, recursion occurs when you write a function that calls itself, usually with a different set of parameters, within the function. Recursion has two key features:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The code will be relatively short: it highlights the essential ",(0,i.jsx)(t.em,{children:"meat"})," of your algorithm and assembles your output using the same procedure."]}),"\n",(0,i.jsx)(t.li,{children:"It depicts the nature of a task \u2014 illustrating how self-similar the task is."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"When implementing an algorithm with recursion, it's important to be mindful of the following issues:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Stack overflow"}),": When solving a problem with recursion, you need to be aware of the maximum possible depth of recursion your code can handle."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Computation overhead"})," due to function calls:\nPassing arguments can be expensive, especially when copying arrays or passing large objects."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"There are some workarounds that convert a recursive procedure into an iterative one.\nHowever, these implementations often become complicated, and extra care is required in their implementation."})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(7294);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);